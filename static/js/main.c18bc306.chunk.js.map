{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","types/Todo.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","users","map","curentUser","find","userId","username","Todo","App","useState","todosFromServer","setTodos","setTitle","hasTitle","setHasTitle","setUser","hasUser","setHasUser","action","method","onSubmit","event","preventDefault","Math","max","apply","newTodo","htmlFor","type","placeholder","value","onChange","target","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"qOAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCDMI,EAA4B,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,KAAMM,EAAW,EAAXA,KACxCC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEnB,OACE,0BACE,UAASF,EACTJ,UAAWO,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIN,UAAU,kBAAd,SACGK,IAGH,cAAC,EAAD,CACER,KAAMA,QCjBDW,EAA4B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjD,OACE,yBAASV,UAAU,WAAnB,SACGS,EAAME,KAAI,SAACR,GACV,IAAMS,EAAaF,EAAMG,MAAK,SAAAhB,GAAI,OAAIA,EAAKO,KAAOD,EAAKW,UAEvD,OAAQF,EAEJ,cAAC,EAAD,CAEET,KAAMA,EACNN,KAAMe,GAFDT,EAAKC,IAKXQ,QCxBE,GACb,CACER,GAAI,EACJN,KAAM,gBACNiB,SAAU,OACVhB,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNiB,SAAU,YACVhB,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNiB,SAAU,WACVhB,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNiB,SAAU,WACVhB,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNiB,SAAU,SACVhB,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNiB,SAAU,mBACVhB,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNiB,SAAU,eACVhB,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNiB,SAAU,gBACVhB,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNiB,SAAU,WACVhB,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNiB,SAAU,iBACVhB,MAAO,2BC3DI,GACb,CACEK,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEV,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEV,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXQ,OAAQ,I,eCjBCE,EAAb,aAGE,WACSZ,EACAC,EACAS,GACN,yBAHMV,KAGP,KAFOC,QAEP,KADOS,SACP,KANFR,WAAY,KCODW,EAAgB,WAC3B,MAA0BC,mBAAS,YAAIC,IAAvC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOb,EAAP,KAAcgB,EAAd,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAwBL,mBAAS,GAAjC,mBAAOrB,EAAP,KAAa2B,EAAb,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAuCA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SA5Be,SAACC,GAWpB,GAVAA,EAAMC,iBAEDlC,GACH6B,GAAW,GAGRrB,GACHkB,GAAY,GAGV1B,GAAQQ,EAAO,CACjB,IAAMD,EAAK4B,KAAKC,IAAIC,MAAM,KAAMzB,EAAME,KAAI,SAAAR,GAAI,OAAIA,EAAKC,OAAO,EACxD+B,EAAU,IAAInB,EAAKZ,EAAIC,EAAOR,GAEpCuB,EAAS,GAAD,mBAAKX,GAAL,CAAY0B,KACpBd,EAAS,IACTG,EAAQ,KAQR,UAKE,sBAAKxB,UAAU,QAAf,UACE,uBAAOoC,QAAQ,QAAf,qBACA,uBACEhC,GAAG,QACHiC,KAAK,OACLvC,KAAK,QACLwC,YAAY,gBACZC,MAAOlC,EACPmC,SAtDgB,SAACV,GACzB,IAAQS,EAAUT,EAAMW,OAAhBF,MAEM,MAAVA,GAAkBlC,GAGpBgB,EAASkB,GACThB,GAAY,IAHZF,EAAS,KAmDH,UAAQ,gBAGRC,GACA,sBAAMtB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOoC,QAAQ,OAAf,oBACA,yBACEhC,GAAG,OACHN,KAAK,OACLyC,MAAO1C,EACP2C,SA1De,SAACV,GACxBN,GAASM,EAAMW,OAAOF,OACtBb,GAAW,IAyDH,UAAQ,aALV,UAOE,wBAAQa,MAAO,EAAGG,UAAQ,EAA1B,2BACCC,EAAgBhC,KAAI,gBAAGP,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAP,OACnB,wBACEyC,MAAOnC,EADT,SAIGN,GAFIM,UAOTqB,GACA,sBAAMzB,UAAU,QAAhB,qCAIJ,wBAAQqC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CACE5B,MAAOA,EACPC,MAAOiC,QC3GfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c18bc306.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  user: User,\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ user, todo }) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo\n        user={user}\n      />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  users: User[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        const curentUser = users.find(user => user.id === todo.userId);\n\n        return (curentUser\n          ? (\n            <TodoInfo\n              key={todo.id}\n              todo={todo}\n              user={curentUser}\n            />\n          )\n          : (curentUser)\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export class Todo {\n  completed = false;\n\n  constructor(\n    public id: number,\n    public title: string,\n    public userId: number,\n  ) {}\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([...todosFromServer]);\n  const [title, setTitle] = useState('');\n  const [hasTitle, setHasTitle] = useState(true);\n  const [user, setUser] = useState(0);\n  const [hasUser, setHasUser] = useState(true);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (value === ' ' && !title) {\n      setTitle('');\n    } else {\n      setTitle(value);\n      setHasTitle(true);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+event.target.value);\n    setHasUser(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!user) {\n      setHasUser(false);\n    }\n\n    if (!title) {\n      setHasTitle(false);\n    }\n\n    if (user && title) {\n      const id = Math.max.apply(null, todos.map(todo => todo.id)) + 1;\n      const newTodo = new Todo(id, title, user);\n\n      setTodos([...todos, newTodo]);\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n            data-cy=\"titleInput\"\n          />\n\n          {!hasTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            name=\"user\"\n            value={user}\n            onChange={handleUserChange}\n            data-cy=\"userSelect\"\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {!hasUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n        users={usersFromServer}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}